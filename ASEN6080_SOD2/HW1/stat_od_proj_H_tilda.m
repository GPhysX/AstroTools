function H_tilda = stat_od_proj_H_tilda(state, consts)
%stat_od_proj_H_tilda Calculate H_tilda matrix for Stat OD project
fcnPrintQueue(mfilename('fullpath')) % Add this code to code app 

% Init H_tilda, set up local vars
x = state(1);
y = state(2);
z = state(3);
xdot = state(4);
ydot = state(5);
zdot = state(6);
% mu = state(7);
% J2 = state(8);
% Cd = state(9);

theta_dot = consts.theta_dot;
theta = consts.t*consts.theta_dot;

%Identify the site the observation was from:
idx_site_in_state = 8; % zero-based!
xs = state(idx_site_in_state+(consts.site-1)*3+1);
ys = state(idx_site_in_state+(consts.site-1)*3+2);
zs = state(idx_site_in_state+(consts.site-1)*3+3);

H_tilda = zeros(2,17);
H_tilda(1,:) = [                                                                                                                                                                                                                                                                                                                                                    (2*x - 2*xs*cos(theta) + 2*ys*sin(theta))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                                                                                   -(2*ys*cos(theta) - 2*y + 2*xs*sin(theta))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                              (2*z - 2*zs)/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                      0,                                                                                                                                       0,                                                                                                           0, 0, 0,                                                                                                                                                                                                                                                                                                                                                                             -(2*cos(theta)*(x - xs*cos(theta) + ys*sin(theta)) - 2*sin(theta)*(ys*cos(theta) - y + xs*sin(theta)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                                                                                                               (2*sin(theta)*(x - xs*cos(theta) + ys*sin(theta)) + 2*cos(theta)*(ys*cos(theta) - y + xs*sin(theta)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                             -(2*z - 2*zs)/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                                                                                                              -(2*cos(theta)*(x - xs*cos(theta) + ys*sin(theta)) - 2*sin(theta)*(ys*cos(theta) - y + xs*sin(theta)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                                                                                                               (2*sin(theta)*(x - xs*cos(theta) + ys*sin(theta)) + 2*cos(theta)*(ys*cos(theta) - y + xs*sin(theta)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                             -(2*z - 2*zs)/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                                                                                                              -(2*cos(theta)*(x - xs*cos(theta) + ys*sin(theta)) - 2*sin(theta)*(ys*cos(theta) - y + xs*sin(theta)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                                                                                                               (2*sin(theta)*(x - xs*cos(theta) + ys*sin(theta)) + 2*cos(theta)*(ys*cos(theta) - y + xs*sin(theta)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)),                                                                                                                                                                                                                                                                                             -(2*z - 2*zs)/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2))];
H_tilda(2,:) = [ (xdot + theta_dot*ys*cos(theta) + theta_dot*xs*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2) - ((2*x - 2*xs*cos(theta) + 2*ys*sin(theta))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)), (ydot - theta_dot*xs*cos(theta) + theta_dot*ys*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2) + ((2*ys*cos(theta) - 2*y + 2*xs*sin(theta))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)), zdot/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2) - ((2*z - 2*zs)*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)), (x - xs*cos(theta) + ys*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), -(ys*cos(theta) - y + xs*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), (z - zs)/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), 0, 0,((2*cos(theta)*(x - xs*cos(theta) + ys*sin(theta)) - 2*sin(theta)*(ys*cos(theta) - y + xs*sin(theta)))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)) - (xdot*cos(theta) + ydot*sin(theta) + theta_dot*y*cos(theta) - theta_dot*x*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), (xdot*sin(theta) - ydot*cos(theta) + theta_dot*x*cos(theta) + theta_dot*y*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2) - ((2*sin(theta)*(x - xs*cos(theta) + ys*sin(theta)) + 2*cos(theta)*(ys*cos(theta) - y + xs*sin(theta)))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)), ((2*z - 2*zs)*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)) - zdot/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), ((2*cos(theta)*(x - xs*cos(theta) + ys*sin(theta)) - 2*sin(theta)*(ys*cos(theta) - y + xs*sin(theta)))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)) - (xdot*cos(theta) + ydot*sin(theta) + theta_dot*y*cos(theta) - theta_dot*x*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), (xdot*sin(theta) - ydot*cos(theta) + theta_dot*x*cos(theta) + theta_dot*y*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2) - ((2*sin(theta)*(x - xs*cos(theta) + ys*sin(theta)) + 2*cos(theta)*(ys*cos(theta) - y + xs*sin(theta)))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)), ((2*z - 2*zs)*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)) - zdot/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), ((2*cos(theta)*(x - xs*cos(theta) + ys*sin(theta)) - 2*sin(theta)*(ys*cos(theta) - y + xs*sin(theta)))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)) - (xdot*cos(theta) + ydot*sin(theta) + theta_dot*y*cos(theta) - theta_dot*x*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2), (xdot*sin(theta) - ydot*cos(theta) + theta_dot*x*cos(theta) + theta_dot*y*sin(theta))/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2) - ((2*sin(theta)*(x - xs*cos(theta) + ys*sin(theta)) + 2*cos(theta)*(ys*cos(theta) - y + xs*sin(theta)))*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)), ((2*z - 2*zs)*(sin(theta)*(xdot*ys - xs*ydot) - cos(theta)*(xdot*xs + ydot*ys) + x*xdot + y*ydot + z*zdot - zdot*zs + theta_dot*cos(theta)*(x*ys - xs*y) + theta_dot*sin(theta)*(x*xs + y*ys)))/(2*((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(3/2)) - zdot/((ys*cos(theta) - y + xs*sin(theta))^2 + (z - zs)^2 + (x - xs*cos(theta) + ys*sin(theta))^2)^(1/2)];

% Zero out the site terms  where there weren't observations.
for ii = 1:3
    if consts.site ~= ii
        H_tilda(:,idx_site_in_state+(ii-1)*3+1:idx_site_in_state+(ii-1)*3+3) = zeros(2,3);
    end
end